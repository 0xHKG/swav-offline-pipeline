========== RENDER START ==========
Traceback (most recent call last):
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/transformers/utils/import_utils.py", line 2317, in __getattr__
    module = self._get_module(self._class_to_module[name])
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/transformers/utils/import_utils.py", line 2347, in _get_module
    raise e
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/transformers/utils/import_utils.py", line 2345, in _get_module
    return importlib.import_module("." + module_name, self.__name__)
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/transformers/models/clip/image_processing_clip.py", line 21, in <module>
    from ...image_processing_utils import BaseImageProcessor, BatchFeature, get_size_dict
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/transformers/image_processing_utils.py", line 21, in <module>
    from .image_processing_base import BatchFeature, ImageProcessingMixin
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/transformers/image_processing_base.py", line 26, in <module>
    from .image_utils import is_valid_image, load_image
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/transformers/image_utils.py", line 55, in <module>
    from torchvision.transforms import InterpolationMode
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/torchvision/__init__.py", line 10, in <module>
    from torchvision import _meta_registrations, datasets, io, models, ops, transforms, utils  # usort:skip
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/torchvision/_meta_registrations.py", line 164, in <module>
    def meta_nms(dets, scores, iou_threshold):
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/torch/library.py", line 1069, in register
    use_lib._register_fake(
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/torch/library.py", line 219, in _register_fake
    handle = entry.fake_impl.register(
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/torch/_library/fake_impl.py", line 50, in register
    if torch._C._dispatch_has_kernel_for_dispatch_key(self.qualname, "Meta"):
RuntimeError: operator torchvision::nms does not exist

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/diffusers/utils/import_utils.py", line 953, in _get_module
    return importlib.import_module("." + module_name, self.__name__)
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/diffusers/pipelines/stable_diffusion_xl/pipeline_stable_diffusion_xl.py", line 19, in <module>
    from transformers import (
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/transformers/utils/import_utils.py", line 2320, in __getattr__
    raise ModuleNotFoundError(
ModuleNotFoundError: Could not import module 'CLIPImageProcessor'. Are this object's requirements defined correctly?

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/gogi/Desktop/Swavlamban 2025/swav_offline_pipeline/orchestrate.py", line 25, in <module>
    from utils import models as model_utils
  File "/home/gogi/Desktop/Swavlamban 2025/swav_offline_pipeline/utils/models.py", line 7, in <module>
    from diffusers import StableDiffusionXLPipeline, StableVideoDiffusionPipeline
  File "<frozen importlib._bootstrap>", line 1075, in _handle_fromlist
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/diffusers/utils/import_utils.py", line 944, in __getattr__
    value = getattr(module, name)
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/diffusers/utils/import_utils.py", line 944, in __getattr__
    value = getattr(module, name)
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/diffusers/utils/import_utils.py", line 943, in __getattr__
    module = self._get_module(self._class_to_module[name])
  File "/home/gogi/miniconda3/envs/swav_offline/lib/python3.10/site-packages/diffusers/utils/import_utils.py", line 955, in _get_module
    raise RuntimeError(
RuntimeError: Failed to import diffusers.pipelines.stable_diffusion_xl.pipeline_stable_diffusion_xl because of the following error (look up to see its traceback):
Could not import module 'CLIPImageProcessor'. Are this object's requirements defined correctly?
